{"ast":null,"code":"var _jsxFileName = \"C:\\\\The Developers Arena\\\\task-manager\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { TaskListContext } from '../contexts/TaskListContext';\nconst TaskForm = () => {\n  _s();\n  const {\n    addTask,\n    clearList,\n    editTask,\n    editItem\n  } = useContext(TaskListContext);\n  const [title, setTitle] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!editItem) {\n      addTask(title);\n      setTitle('');\n    } else {\n      editTask(title, editItem.id);\n    }\n  };\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n  useEffect(() => {\n    if (editItem) {\n      setTitle(editItem.title);\n      console.log(editItem);\n    } else {\n      setTitle('');\n    }\n  }, [editItem]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Add Task...\",\n    value: title,\n    onChange: handleChange,\n    required: true,\n    className: \"task-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn add-task-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, editItem ? 'Edit Task' : 'Add Task'), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn clear-btn\",\n    onClick: clearList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\n_s(TaskForm, \"1hMI43yOlc/SGAg64ZUsWxNdUFo=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useContext","useEffect","TaskListContext","TaskForm","_s","addTask","clearList","editTask","editItem","title","setTitle","handleSubmit","e","preventDefault","id","handleChange","target","value","console","log","createElement","onSubmit","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/The Developers Arena/task-manager/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\nimport { TaskListContext } from '../contexts/TaskListContext'\r\n\r\nconst TaskForm = () => {\r\n  const { addTask, clearList, editTask, editItem } = useContext(TaskListContext)\r\n  const [title, setTitle] = useState('')\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (!editItem) {\r\n      addTask(title)\r\n      setTitle('')\r\n    } else {\r\n      editTask(title, editItem.id)\r\n    }\r\n  }\r\n\r\n  const handleChange = e => {\r\n    setTitle(e.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (editItem) {\r\n      setTitle(editItem.title)\r\n      console.log(editItem)\r\n    } else {\r\n      setTitle('')\r\n    }\r\n  }, [editItem])\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add Task...\"\r\n        value={title}\r\n        onChange={handleChange}\r\n        required\r\n        className=\"task-input\"\r\n      />\r\n      <div className=\"buttons\">\r\n        <button type=\"submit\" className=\"btn add-task-btn\">\r\n          {editItem ? 'Edit Task' : 'Add Task'}\r\n        </button>\r\n        <button className=\"btn clear-btn\" onClick={clearList}>\r\n          Clear\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TaskForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,eAAe,QAAQ,6BAA6B;AAE7D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,OAAO;IAAEC,SAAS;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGR,UAAU,CAACE,eAAe,CAAC;EAC9E,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,YAAY,GAAGC,CAAC,IAAI;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACL,QAAQ,EAAE;MACbH,OAAO,CAACI,KAAK,CAAC;MACdC,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,MAAM;MACLH,QAAQ,CAACE,KAAK,EAAED,QAAQ,CAACM,EAAE,CAAC;IAC9B;EACF,CAAC;EAED,MAAMC,YAAY,GAAGH,CAAC,IAAI;IACxBF,QAAQ,CAACE,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,EAAE;MACZE,QAAQ,CAACF,QAAQ,CAACC,KAAK,CAAC;MACxBS,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;IACvB,CAAC,MAAM;MACLE,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,oBACEV,KAAA,CAAAsB,aAAA;IAAMC,QAAQ,EAAEV,YAAa;IAACW,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5C9B,KAAA,CAAAsB,aAAA;IACES,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,aAAa;IACzBb,KAAK,EAAER,KAAM;IACbsB,QAAQ,EAAEhB,YAAa;IACvBiB,QAAQ;IACRV,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACvB,CAAC,eACF9B,KAAA,CAAAsB,aAAA;IAAKE,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtB9B,KAAA,CAAAsB,aAAA;IAAQS,IAAI,EAAC,QAAQ;IAACP,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/CpB,QAAQ,GAAG,WAAW,GAAG,UACpB,CAAC,eACTV,KAAA,CAAAsB,aAAA;IAAQE,SAAS,EAAC,eAAe;IAACW,OAAO,EAAE3B,SAAU;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAE9C,CACL,CACD,CAAC;AAEX,CAAC;AAAAxB,EAAA,CA/CKD,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAiDd,eAAeA,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}